アイテムパラメータ

攻撃力
クリティカル率
HP吸収


防御力
HP最大アップ
リジェネ


移動速度


ドロップ金増加



+Add

キャラクター系パラメータ

エネミー

(敵の種類を管理しているenumが多分あるからそこで基本値を設定する。)

Hp=基本体力値
Atk=基本攻撃値
Def=基本防御値
Crt=基本クリティカル率
Spd=基本移動スピード
Drop_Gold=倒した際の金額

ItemHav[10]=アイテムは何を持っているかの確認
Item_Db[10]=アイテム欄の耐久値

Add_Hp=所持アイテムの最大HPアップ合計値
Add_Atk=所持アイテムの攻撃力合計値
Add_Def=所持アイテムの防御力合計値
Add_Crt=所持アイテムのクリティカル率合計値
Add_Spd=所持アイテムの移動スピード値合計
Abp_Hp=攻撃を与えた際のHp吸収率(ダメージ*吸収率(%)、ON,OFF フラグいるかな？)
Auto_Heal=リジェネ(1秒間に回復する量(微量)、ON,OFF フラグいるかな？)　?>0　0より大きかったら処理するでいいや
Gold_Per=お金の取れる量が増える(敵の場合はモデル消滅時にコインを落とす際、にかける(強い武器を使う分お金もとれる量が増える))


プレイヤー

Hp=基本体力値
Atk=基本攻撃値
Def=基本防御値
Crt=基本クリティカル率
Speed=基本移動スピード

ItemHav[10]=アイテムは何を持っているかの確認
Item_Db[10]=アイテム欄の耐久値

Add_Hp=所持アイテムの最大HPアップ合計値
Add_Atk=所持アイテムの攻撃力合計値
Add_Def=所持アイテムの防御力合計値
Add_Crt=所持アイテムのクリティカル率合計値
Add_Spd=所持アイテムの移動スピード値合計
Abp_Hp=攻撃を与えた際のHp吸収率(ダメージ*吸収率(%))
Auto_Heal=リジェネ(1秒間に回復する量(微量))
Gold_Per=敵を倒した際にもらえるお金の量が増える。


アイテムパラメータ

構造体
_ITEM_PARAM{

int Db=アイテムの耐久値
int Hp=装備した際の追加HP
int Atk=装備した際の追加攻撃力
int Def=装備した際の追加防御力
float Crt=装備した際の追加クリティカル率
float Spd=装備した際の追加移動速度
float Abp=攻撃した際の追加HP吸収率
int Heal=装備した際の追加リジェネ
float Gold=敵を倒した際のドロップ金増加率

}


_ITEM_PARAM ItemParam[?]



//テキストファイル読み込みで能力を読み取る

extern bool Item_Load(){

char FilePath[256];←？Char型でいいのかな
for(int i=0,ItemParam[?],i++){
for(int j=0,ItemParam[?],j++)?{
テキストからパラメータ読み込み(Db,Hp,Atk,Def,Crt,Spd,Abp,Heal,Gold)9要素+進化図(どうやろう？要相談)
パラメータがない場合0を入れ込む。
パラメータが0の場合は出力時(Shop)の時に表示しない。改行\0表示で詰めて出力できると思う。


}
}
for(){
for(){
//画像の読み込み
LoadDivGraph(...)
}
}
}

